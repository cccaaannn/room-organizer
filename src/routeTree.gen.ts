/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TagsIndexImport } from './routes/tags/index'
import { Route as RoomsIndexImport } from './routes/rooms/index'
import { Route as ItemsIndexImport } from './routes/items/index'
import { Route as RoomsRoomIdFurnitureIndexImport } from './routes/rooms/$roomId/furniture/index'
import { Route as RoomsRoomIdFurnitureFurnitureIdSectionsIndexImport } from './routes/rooms/$roomId/furniture/$furnitureId/sections/index'
import { Route as RoomsRoomIdFurnitureFurnitureIdSectionsSectionIdItemsIndexImport } from './routes/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TagsIndexRoute = TagsIndexImport.update({
  id: '/tags/',
  path: '/tags/',
  getParentRoute: () => rootRoute,
} as any)

const RoomsIndexRoute = RoomsIndexImport.update({
  id: '/rooms/',
  path: '/rooms/',
  getParentRoute: () => rootRoute,
} as any)

const ItemsIndexRoute = ItemsIndexImport.update({
  id: '/items/',
  path: '/items/',
  getParentRoute: () => rootRoute,
} as any)

const RoomsRoomIdFurnitureIndexRoute = RoomsRoomIdFurnitureIndexImport.update({
  id: '/rooms/$roomId/furniture/',
  path: '/rooms/$roomId/furniture/',
  getParentRoute: () => rootRoute,
} as any)

const RoomsRoomIdFurnitureFurnitureIdSectionsIndexRoute =
  RoomsRoomIdFurnitureFurnitureIdSectionsIndexImport.update({
    id: '/rooms/$roomId/furniture/$furnitureId/sections/',
    path: '/rooms/$roomId/furniture/$furnitureId/sections/',
    getParentRoute: () => rootRoute,
  } as any)

const RoomsRoomIdFurnitureFurnitureIdSectionsSectionIdItemsIndexRoute =
  RoomsRoomIdFurnitureFurnitureIdSectionsSectionIdItemsIndexImport.update({
    id: '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items/',
    path: '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/items/': {
      id: '/items/'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof ItemsIndexImport
      parentRoute: typeof rootRoute
    }
    '/rooms/': {
      id: '/rooms/'
      path: '/rooms'
      fullPath: '/rooms'
      preLoaderRoute: typeof RoomsIndexImport
      parentRoute: typeof rootRoute
    }
    '/tags/': {
      id: '/tags/'
      path: '/tags'
      fullPath: '/tags'
      preLoaderRoute: typeof TagsIndexImport
      parentRoute: typeof rootRoute
    }
    '/rooms/$roomId/furniture/': {
      id: '/rooms/$roomId/furniture/'
      path: '/rooms/$roomId/furniture'
      fullPath: '/rooms/$roomId/furniture'
      preLoaderRoute: typeof RoomsRoomIdFurnitureIndexImport
      parentRoute: typeof rootRoute
    }
    '/rooms/$roomId/furniture/$furnitureId/sections/': {
      id: '/rooms/$roomId/furniture/$furnitureId/sections/'
      path: '/rooms/$roomId/furniture/$furnitureId/sections'
      fullPath: '/rooms/$roomId/furniture/$furnitureId/sections'
      preLoaderRoute: typeof RoomsRoomIdFurnitureFurnitureIdSectionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items/': {
      id: '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items/'
      path: '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items'
      fullPath: '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items'
      preLoaderRoute: typeof RoomsRoomIdFurnitureFurnitureIdSectionsSectionIdItemsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/items': typeof ItemsIndexRoute
  '/rooms': typeof RoomsIndexRoute
  '/tags': typeof TagsIndexRoute
  '/rooms/$roomId/furniture': typeof RoomsRoomIdFurnitureIndexRoute
  '/rooms/$roomId/furniture/$furnitureId/sections': typeof RoomsRoomIdFurnitureFurnitureIdSectionsIndexRoute
  '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items': typeof RoomsRoomIdFurnitureFurnitureIdSectionsSectionIdItemsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/items': typeof ItemsIndexRoute
  '/rooms': typeof RoomsIndexRoute
  '/tags': typeof TagsIndexRoute
  '/rooms/$roomId/furniture': typeof RoomsRoomIdFurnitureIndexRoute
  '/rooms/$roomId/furniture/$furnitureId/sections': typeof RoomsRoomIdFurnitureFurnitureIdSectionsIndexRoute
  '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items': typeof RoomsRoomIdFurnitureFurnitureIdSectionsSectionIdItemsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/items/': typeof ItemsIndexRoute
  '/rooms/': typeof RoomsIndexRoute
  '/tags/': typeof TagsIndexRoute
  '/rooms/$roomId/furniture/': typeof RoomsRoomIdFurnitureIndexRoute
  '/rooms/$roomId/furniture/$furnitureId/sections/': typeof RoomsRoomIdFurnitureFurnitureIdSectionsIndexRoute
  '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items/': typeof RoomsRoomIdFurnitureFurnitureIdSectionsSectionIdItemsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/items'
    | '/rooms'
    | '/tags'
    | '/rooms/$roomId/furniture'
    | '/rooms/$roomId/furniture/$furnitureId/sections'
    | '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/items'
    | '/rooms'
    | '/tags'
    | '/rooms/$roomId/furniture'
    | '/rooms/$roomId/furniture/$furnitureId/sections'
    | '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items'
  id:
    | '__root__'
    | '/'
    | '/items/'
    | '/rooms/'
    | '/tags/'
    | '/rooms/$roomId/furniture/'
    | '/rooms/$roomId/furniture/$furnitureId/sections/'
    | '/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ItemsIndexRoute: typeof ItemsIndexRoute
  RoomsIndexRoute: typeof RoomsIndexRoute
  TagsIndexRoute: typeof TagsIndexRoute
  RoomsRoomIdFurnitureIndexRoute: typeof RoomsRoomIdFurnitureIndexRoute
  RoomsRoomIdFurnitureFurnitureIdSectionsIndexRoute: typeof RoomsRoomIdFurnitureFurnitureIdSectionsIndexRoute
  RoomsRoomIdFurnitureFurnitureIdSectionsSectionIdItemsIndexRoute: typeof RoomsRoomIdFurnitureFurnitureIdSectionsSectionIdItemsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ItemsIndexRoute: ItemsIndexRoute,
  RoomsIndexRoute: RoomsIndexRoute,
  TagsIndexRoute: TagsIndexRoute,
  RoomsRoomIdFurnitureIndexRoute: RoomsRoomIdFurnitureIndexRoute,
  RoomsRoomIdFurnitureFurnitureIdSectionsIndexRoute:
    RoomsRoomIdFurnitureFurnitureIdSectionsIndexRoute,
  RoomsRoomIdFurnitureFurnitureIdSectionsSectionIdItemsIndexRoute:
    RoomsRoomIdFurnitureFurnitureIdSectionsSectionIdItemsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/items/",
        "/rooms/",
        "/tags/",
        "/rooms/$roomId/furniture/",
        "/rooms/$roomId/furniture/$furnitureId/sections/",
        "/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/items/": {
      "filePath": "items/index.tsx"
    },
    "/rooms/": {
      "filePath": "rooms/index.tsx"
    },
    "/tags/": {
      "filePath": "tags/index.tsx"
    },
    "/rooms/$roomId/furniture/": {
      "filePath": "rooms/$roomId/furniture/index.tsx"
    },
    "/rooms/$roomId/furniture/$furnitureId/sections/": {
      "filePath": "rooms/$roomId/furniture/$furnitureId/sections/index.tsx"
    },
    "/rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items/": {
      "filePath": "rooms/$roomId/furniture/$furnitureId/sections/$sectionId/items/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
